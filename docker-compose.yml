version: "3.9"
services:
  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - SECRET_KEY=${SECRET_KEY:-dev-secret-change-me}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./axionos.db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - WEAVIATE_URL=${WEAVIATE_URL:-http://weaviate:8080}
      - LLM_PROVIDER=${LLM_PROVIDER:-stub}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - OLLAMA_HOST=${OLLAMA_HOST:-http://ollama:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}
      - APP_BASE_URL=${APP_BASE_URL:-http://localhost:3000}
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - weaviate

  worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: bash -lc "celery -A backend.app.worker.celery_app.celery_app worker --loglevel=info"
    environment:
      - SECRET_KEY=${SECRET_KEY:-dev-secret-change-me}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./axionos.db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - WEAVIATE_URL=${WEAVIATE_URL:-http://weaviate:8080}
      - LLM_PROVIDER=${LLM_PROVIDER:-stub}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - OLLAMA_HOST=${OLLAMA_HOST:-http://ollama:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}
    volumes:
      - ./:/app
    depends_on:
      - redis
      - weaviate

  flower:
    image: mher/flower:2.0
    command: ["flower", "--broker=${REDIS_URL:-redis://redis:6379/0}"]
    ports:
      - "5555:5555"
    depends_on:
      - redis
  redis:
    image: redis:7
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-axionos}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 10

  weaviate:
    image: semitechnologies/weaviate:latest
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "none"
      CLUSTER_HOSTNAME: "node1"
    ports:
      - "${WEAVIATE_PORT:-8080}:8080"
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 20

volumes:
  pgdata:
  weaviate_data:
